# Generated by Django 3.0.5 on 2020-04-01 13:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activityID', models.AutoField(db_column='ActivityID', primary_key=True, serialize=False)),
                ('activityName', models.CharField(db_column='ActivityName', max_length=30)),
                ('activityDesc', models.CharField(blank=True, db_column='ActivityDesc', max_length=255, null=True)),
                ('moodScore', models.FloatField(blank=True, db_column='MoodScore', null=True)),
                ('moodScoreTimed', models.IntegerField(blank=True, db_column='MoodScoreTimed', null=True)),
                ('prodScore', models.FloatField(blank=True, db_column='ProdScore', null=True)),
                ('prodScoreTimed', models.IntegerField(blank=True, db_column='ProdScoreTimed', null=True)),
                ('expDuration', models.FloatField(blank=True, db_column='ExpDuration', null=True)),
                ('expFrequency', models.FloatField(blank=True, db_column='ExpFrequency', null=True)),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('conditionID', models.AutoField(db_column='ConditionID', primary_key=True, serialize=False)),
                ('conditionName', models.CharField(db_column='ConditionName', max_length=30)),
                ('conditionDesc', models.CharField(blank=True, db_column='ConditionDesc', max_length=255, null=True)),
                ('condProdScoreMin', models.FloatField(db_column='CondProdScoreMin')),
                ('condProdScoreMax', models.FloatField(db_column='CondProdScoreMax')),
                ('condMoodScoreMin', models.FloatField(db_column='CondMoodScoreMin')),
                ('condMoodScoreMax', models.FloatField(db_column='CondMoodScoreMax')),
            ],
            options={
                'db_table': 'condition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('deviceID', models.AutoField(db_column='DeviceID', primary_key=True, serialize=False)),
                ('deviceName', models.CharField(db_column='DeviceName', max_length=30)),
                ('deviceDesc', models.CharField(blank=True, db_column='DeviceDesc', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('deviceTypeID', models.AutoField(db_column='DeviceTypeID', primary_key=True, serialize=False)),
                ('deviceTypeName', models.CharField(db_column='DeviceTypeName', max_length=30, unique=True)),
                ('deviceTypeDesc', models.CharField(blank=True, db_column='DeviceTypeDesc', max_length=255, null=True)),
            ],
            options={
                'db_table': 'DeviceType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_ID', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MoodEntry',
            fields=[
                ('moodEntryID', models.AutoField(db_column='MoodEntryID', primary_key=True, serialize=False)),
                ('moodValue', models.IntegerField(db_column='MoodValue')),
                ('time', models.FloatField(db_column='Time')),
            ],
            options={
                'db_table': 'MoodEntry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('suggestionID', models.AutoField(db_column='SuggestionID', primary_key=True, serialize=False)),
                ('suggestionTitle', models.CharField(db_column='SuggestionTitle', max_length=30)),
                ('suggestionText', models.CharField(db_column='SuggestionText', max_length=1023)),
                ('suggestionPhoto', models.TextField(blank=True, db_column='SuggestionPhoto', null=True)),
                ('suggestionVideo', models.TextField(blank=True, db_column='SuggestionVideo', null=True)),
            ],
            options={
                'db_table': 'Suggestion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('userActivityID', models.AutoField(db_column='UserActivityID', primary_key=True, serialize=False)),
                ('startTime', models.FloatField(blank=True, db_column='StartTime', null=True)),
                ('endTime', models.FloatField(blank=True, db_column='EndTime', null=True)),
            ],
            options={
                'db_table': 'UserActivity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCondition',
            fields=[
                ('userConditionID', models.AutoField(db_column='UserConditionID', primary_key=True, serialize=False)),
                ('time', models.FloatField(blank=True, db_column='Time', null=True)),
            ],
            options={
                'db_table': 'UserCondition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityDevice',
            fields=[
                ('activityID', models.ForeignKey(db_column='ActivityID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='activix_api.Activity')),
            ],
            options={
                'db_table': 'ActivityDevice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConditionSuggestion',
            fields=[
                ('conditionID', models.ForeignKey(db_column='ConditionID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='activix_api.Condition')),
            ],
            options={
                'db_table': 'ConditionSuggestion',
                'managed': False,
            },
        ),
    ]
